<Activity mc:Ignorable="sap sap2010 sads" x:Class="SP_TrainingEventManager_js.NewUniAdded.Workflow" this:Workflow.argTOEmail="spt@xellems.onmicrosoft.com"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:SP_TrainingEventManager_js.NewUniAdded"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="argTOEmail" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>SP_TrainingEventManager_js.NewUniAdded.Workflow_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>SP_TrainingEventManager_js</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p:DynamicValue" Name="GetEventlistItem" />
      <Variable x:TypeArguments="p:DynamicValue" Name="GetAttendees" />
      <Variable x:TypeArguments="x:Int32" Name="ID" />
      <Variable x:TypeArguments="x:String" Name="Title" />
      <Variable x:TypeArguments="s:DateTime" Name="EndTime" />
      <Variable x:TypeArguments="scg:IEnumerable(p:DynamicForEach(p:DynamicValue))" Name="GetEventlistItems" />
      <Variable x:TypeArguments="x:Int32" Name="GUID" />
      <Variable x:TypeArguments="x:Int32" Name="GUIDEmployeeList" />
      <Variable x:TypeArguments="x:String" Name="variable1" />
    </Sequence.Variables>
    <Delay sap2010:WorkflowViewState.IdRef="Delay_1">
      <InArgument x:TypeArguments="x:TimeSpan">
        <mca:CSharpValue x:TypeArguments="x:TimeSpan">System.TimeSpan.Parse("00:01:00");</mca:CSharpValue>
      </InArgument>
    </Delay>
    <p1:LookupSPListItemId PropertyValue="Pending">
      <p1:LookupSPListItemId.ListId>
        <InArgument x:TypeArguments="s:Guid">
          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p1:GetCurrentListId />
          </p:ExpressionContainerValue>
        </InArgument>
      </p1:LookupSPListItemId.ListId>
      <p1:LookupSPListItemId.PropertyName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">"EmailSent"</mca:CSharpValue>
        </InArgument>
      </p1:LookupSPListItemId.PropertyName>
      <p1:LookupSPListItemId.Result>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">GUID</mca:CSharpReference>
        </OutArgument>
      </p1:LookupSPListItemId.Result>
      <sap2010:WorkflowViewState.IdRef>LookupSPListItemId_1</sap2010:WorkflowViewState.IdRef>
    </p1:LookupSPListItemId>
    <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}">
      <p1:LookupSPListItem.ItemId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">GUID</mca:CSharpValue>
        </InArgument>
      </p1:LookupSPListItem.ItemId>
      <p1:LookupSPListItem.ListId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/EventList;}")</mca:CSharpValue>
        </InArgument>
      </p1:LookupSPListItem.ListId>
      <p1:LookupSPListItem.Result>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpReference x:TypeArguments="p:DynamicValue">GetEventlistItem</mca:CSharpReference>
        </OutArgument>
      </p1:LookupSPListItem.Result>
      <sap2010:WorkflowViewState.IdRef>LookupSPListItem_2</sap2010:WorkflowViewState.IdRef>
    </p1:LookupSPListItem>
    <p:GetODataProperties DisplayName="GetDynamicValueProperties">
      <p:GetODataProperties.Source>
        <InArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpValue x:TypeArguments="p:DynamicValue">GetEventlistItem</mca:CSharpValue>
        </InArgument>
      </p:GetODataProperties.Source>
      <scg:Dictionary x:TypeArguments="x:String, OutArgument">
        <OutArgument x:TypeArguments="x:Object" x:Key="Id">
          <mca:CSharpReference x:TypeArguments="x:Object">Id</mca:CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Title">
          <mca:CSharpReference x:TypeArguments="x:String">Title</mca:CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="s:DateTime" x:Key="EndDate">
          <mca:CSharpReference x:TypeArguments="s:DateTime">EndTime</mca:CSharpReference>
        </OutArgument>
      </scg:Dictionary>
      <sap2010:WorkflowViewState.IdRef>GetODataProperties_2</sap2010:WorkflowViewState.IdRef>
    </p:GetODataProperties>
    <ForEach x:TypeArguments="x:Int32">
      <ActivityAction x:TypeArguments="x:Int32">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="x:Int32" Name="item" />
        </ActivityAction.Argument>
      </ActivityAction>
      <sap2010:WorkflowViewState.IdRef>ForEach`1_1</sap2010:WorkflowViewState.IdRef>
    </ForEach>
    <p1:LookupSPListItemId>
      <p1:LookupSPListItemId.ListId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Employee;}")</mca:CSharpValue>
        </InArgument>
      </p1:LookupSPListItemId.ListId>
      <p1:LookupSPListItemId.PropertyName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">"EventLookupId"</mca:CSharpValue>
        </InArgument>
      </p1:LookupSPListItemId.PropertyName>
      <p1:LookupSPListItemId.PropertyValue>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">ID.ToString();</mca:CSharpValue>
        </InArgument>
      </p1:LookupSPListItemId.PropertyValue>
      <p1:LookupSPListItemId.Result>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">GUIDEmployeeList</mca:CSharpReference>
        </OutArgument>
      </p1:LookupSPListItemId.Result>
      <sap2010:WorkflowViewState.IdRef>LookupSPListItemId_2</sap2010:WorkflowViewState.IdRef>
    </p1:LookupSPListItemId>
    <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}" Body="Provide Event Feedback" sap2010:WorkflowViewState.IdRef="Email_1" Subject="Provide Event Feedback">
      <p1:Email.To>
        <InArgument x:TypeArguments="sco:Collection(x:String)">
          <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">new System.Collections.ObjectModel.Collection&lt;string&gt;() { argTOEmail }</mca:CSharpValue>
        </InArgument>
      </p1:Email.To>
    </p1:Email>
    <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_1">
      <p1:WriteToHistory.Message>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">String.Format("An email for New University/Organization Added was sent.")</mca:CSharpValue>
        </InArgument>
      </p1:WriteToHistory.Message>
    </p1:WriteToHistory>
    <sads:DebugSymbol.Symbol>d5oBQzpcSEVDIFByb2plY3RcRmluYWxpemUgUHJvamVjdHNcRjFcSEVDX0VNUyBMQVRFU1RcRnJlc2ggQ29weSAtIEVoc2FuXEhFQ19FTVNWMS4zXFNQX1RyYWluaW5nRXZlbnRNYW5hZ2VyX2pzXE92ZXJkdWVFdmVudHNTZW5kRW1haWxXRiAtIENvcHlcV29ya2Zsb3cueGFtbB8BfgGaAQECMAOoAQ4CAQE8BUANAwGyAUEFVB0DAZkBVQVmGwIBd2cFeRwCAUp6BYEBDwIBSYIBBZgBHQIBHJkBBZ8BEAIBDqABBaYBGQIBAj4JPmsDAbMBQSpBMwMBsQFEC0YoAwGwAVALUFQDAaUBSwtLVAMBmgFdC112AwGOAWILYmcDAYMBWAtYTAIBeG8Lb1MCAWx1C3VaAgFhagtqXwIBVnILclYCAUuPAQuPAVcCAT6FAQuFAXUCATOUAQuUAWACASiKAQuKAVgCAR2cAQucAaUBAgERmQFOmQFmAgEQmQGZAZkBsQECAQ+jAQujAZIBAgEDRQ1FJAQBsAEB</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="282,22" />
      <sap2010:ViewStateData Id="LookupSPListItemId_1" sap:VirtualizedContainerService.HintSize="282,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="(current list)" Value="$CurrentListId" />
              <msdad:ViewStateNameValue x:Key="PropertyName" DisplayName="EmailSentStatus" Value="EmailSent" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItem_2" sap:VirtualizedContainerService.HintSize="282,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ItemId" DisplayName="(current item)" Value="$CurrentItemId" />
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="EventList" Value="Lists/EventList" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_2" sap:VirtualizedContainerService.HintSize="282,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/EventList</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="282,205" />
      <sap2010:ViewStateData Id="LookupSPListItemId_2" sap:VirtualizedContainerService.HintSize="282,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="Employee" Value="Lists/Employee" />
              <msdad:ViewStateNameValue x:Key="PropertyName" DisplayName="EventLookup" Value="EventLookupId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Email_1" sap:VirtualizedContainerService.HintSize="282,68" />
      <sap2010:ViewStateData Id="WriteToHistory_1" sap:VirtualizedContainerService.HintSize="282,68" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="304,1082">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SP_TrainingEventManager_js.NewUniAdded.Workflow_1" sap:VirtualizedContainerService.HintSize="344,814" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>